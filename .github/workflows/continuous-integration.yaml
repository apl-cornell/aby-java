name: CI

on:
  push:
  pull_request:
  release:
    types: [ published ]

env:
  JDK_DISTRIBUTION: zulu
  JDK_VERSION: 11

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch history and tags; necessary for computing project version.
      - name: Set up JDK ${{ env.JDK_VERSION }}
        uses: actions/setup-java@v3
        with:
          distribution: ${{ env.JDK_DISTRIBUTION }}
          java-version: ${{ env.JDK_VERSION }}
      - name: Generate classes and native binaries
        uses: gradle/gradle-build-action@v2
        with:
          arguments: classes check javadocJar sourcesJar -x test
      - name: Upload generated files for other jobs
        uses: actions/upload-artifact@v3
        with:
          name: ClassesAndResources
          path: |
            build/classes
            build/libs
            build/resources

  test:
    name: test (${{ matrix.os }}, JDK ${{ matrix.java }})
    needs: build

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - macos-10.15
          - ubuntu-18.04
          - ubuntu-20.04
        java:
          - 11
          # - 14

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          distribution: ${{ env.JDK_DISTRIBUTION }}
          java-version: ${{ matrix.java }}
      - name: Download generated files
        uses: actions/download-artifact@v3
        with:
          name: ClassesAndResources
          path: build
      - name: Test with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: -x classes test --tests=*AbyTest.constantGate

  publish:
    needs: test

    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch history and tags; necessary for computing project version.
      - name: Set up JDK ${{ env.JDK_VERSION }}
        uses: actions/setup-java@v3
        with:
          distribution: ${{ env.JDK_DISTRIBUTION }}
          java-version: ${{ env.JDK_VERSION }}
      - name: Download generated files
        uses: actions/download-artifact@v3
        with:
          name: ClassesAndResources
          path: build
      - name: Publish to GitHub Packages and Maven Central
        uses: gradle/gradle-build-action@v2
        with:
          arguments: >
            ${{ github.event_name != 'release' && '--dry-run' || '' }}
            -x classes -x javadocJar -x sourcesJar
            publish closeAndReleaseSonatypeStagingRepository
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.ORG_GRADLE_PROJECT_SONATYPEUSERNAME }}
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.ORG_GRADLE_PROJECT_SONATYPEPASSWORD }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGKEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGPASSWORD }}
