/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package de.tu_darmstadt.cs.encrypto.aby;

public class Circuit {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected Circuit(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Circuit obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        throw new UnsupportedOperationException("C++ destructor does not have public access");
      }
      swigCPtr = 0;
    }
  }

  public long getShareBitLen() {
    return AbyJNI.Circuit_getShareBitLen(swigCPtr, this);
  }

  public long getMaxDepth() {
    return AbyJNI.Circuit_getMaxDepth(swigCPtr, this);
  }

  public long getNumInputBitsForParty(Role party) {
    return AbyJNI.Circuit_getNumInputBitsForParty(swigCPtr, this, party.swigValue());
  }

  public long getNumOutputBitsForParty(Role party) {
    return AbyJNI.Circuit_getNumOutputBitsForParty(swigCPtr, this, party.swigValue());
  }

  public SharingType getContext() {
    return SharingType.swigToEnum(AbyJNI.Circuit_getContext(swigCPtr, this));
  }

  public long getNumGates() {
    return AbyJNI.Circuit_getNumGates(swigCPtr, this);
  }

  public Share putCONSGate(java.math.BigInteger val, long bitlen) {
    long cPtr = AbyJNI.Circuit_putCONSGate(swigCPtr, this, val, bitlen);
    return (cPtr == 0) ? null : new Share(cPtr, false);
  }

  public Share putINGate(java.math.BigInteger val, long bitlen, Role role) {
    long cPtr = AbyJNI.Circuit_putINGate(swigCPtr, this, val, bitlen, role.swigValue());
    return (cPtr == 0) ? null : new Share(cPtr, false);
  }

  public Share putDummyINGate(long bitlen) {
    long cPtr = AbyJNI.Circuit_putDummyINGate(swigCPtr, this, bitlen);
    return (cPtr == 0) ? null : new Share(cPtr, false);
  }

  public Share putSharedINGate(java.math.BigInteger val, long bitlen) {
    long cPtr = AbyJNI.Circuit_putSharedINGate(swigCPtr, this, val, bitlen);
    return (cPtr == 0) ? null : new Share(cPtr, false);
  }

  public Share putADDGate(Share ina, Share inb) {
    long cPtr = AbyJNI.Circuit_putADDGate(swigCPtr, this, Share.getCPtr(ina), ina, Share.getCPtr(inb), inb);
    return (cPtr == 0) ? null : new Share(cPtr, false);
  }

  public Share putSUBGate(Share ina, Share inb) {
    long cPtr = AbyJNI.Circuit_putSUBGate(swigCPtr, this, Share.getCPtr(ina), ina, Share.getCPtr(inb), inb);
    return (cPtr == 0) ? null : new Share(cPtr, false);
  }

  public Share putANDGate(Share ina, Share inb) {
    long cPtr = AbyJNI.Circuit_putANDGate(swigCPtr, this, Share.getCPtr(ina), ina, Share.getCPtr(inb), inb);
    return (cPtr == 0) ? null : new Share(cPtr, false);
  }

  public Share putXORGate(Share ina, Share inb) {
    long cPtr = AbyJNI.Circuit_putXORGate(swigCPtr, this, Share.getCPtr(ina), ina, Share.getCPtr(inb), inb);
    return (cPtr == 0) ? null : new Share(cPtr, false);
  }

  public Share putMULGate(Share ina, Share inb) {
    long cPtr = AbyJNI.Circuit_putMULGate(swigCPtr, this, Share.getCPtr(ina), ina, Share.getCPtr(inb), inb);
    return (cPtr == 0) ? null : new Share(cPtr, false);
  }

  public Share putGTGate(Share ina, Share inb) {
    long cPtr = AbyJNI.Circuit_putGTGate(swigCPtr, this, Share.getCPtr(ina), ina, Share.getCPtr(inb), inb);
    return (cPtr == 0) ? null : new Share(cPtr, false);
  }

  public Share putEQGate(Share ina, Share inb) {
    long cPtr = AbyJNI.Circuit_putEQGate(swigCPtr, this, Share.getCPtr(ina), ina, Share.getCPtr(inb), inb);
    return (cPtr == 0) ? null : new Share(cPtr, false);
  }

  public Share putMUXGate(Share ina, Share inb, Share sel) {
    long cPtr = AbyJNI.Circuit_putMUXGate(swigCPtr, this, Share.getCPtr(ina), ina, Share.getCPtr(inb), inb, Share.getCPtr(sel), sel);
    return (cPtr == 0) ? null : new Share(cPtr, false);
  }

  public Share putUniversalGate(Share ina, Share inb, long op_id) {
    long cPtr = AbyJNI.Circuit_putUniversalGate(swigCPtr, this, Share.getCPtr(ina), ina, Share.getCPtr(inb), inb, op_id);
    return (cPtr == 0) ? null : new Share(cPtr, false);
  }

  public Share putY2BGate(Share ina) {
    long cPtr = AbyJNI.Circuit_putY2BGate(swigCPtr, this, Share.getCPtr(ina), ina);
    return (cPtr == 0) ? null : new Share(cPtr, false);
  }

  public Share putB2AGate(Share ina) {
    long cPtr = AbyJNI.Circuit_putB2AGate(swigCPtr, this, Share.getCPtr(ina), ina);
    return (cPtr == 0) ? null : new Share(cPtr, false);
  }

  public Share putB2YGate(Share ina) {
    long cPtr = AbyJNI.Circuit_putB2YGate(swigCPtr, this, Share.getCPtr(ina), ina);
    return (cPtr == 0) ? null : new Share(cPtr, false);
  }

  public Share putA2YGate(Share ina) {
    long cPtr = AbyJNI.Circuit_putA2YGate(swigCPtr, this, Share.getCPtr(ina), ina);
    return (cPtr == 0) ? null : new Share(cPtr, false);
  }

  public Share putY2AGate(Share ina, Circuit boolsharingcircuit) {
    long cPtr = AbyJNI.Circuit_putY2AGate(swigCPtr, this, Share.getCPtr(ina), ina, Circuit.getCPtr(boolsharingcircuit), boolsharingcircuit);
    return (cPtr == 0) ? null : new Share(cPtr, false);
  }

  public Share putA2BGate(Share ina, Circuit yaosharingcircuit) {
    long cPtr = AbyJNI.Circuit_putA2BGate(swigCPtr, this, Share.getCPtr(ina), ina, Circuit.getCPtr(yaosharingcircuit), yaosharingcircuit);
    return (cPtr == 0) ? null : new Share(cPtr, false);
  }

  public Share putANDVecGate(Share ina, Share inb) {
    long cPtr = AbyJNI.Circuit_putANDVecGate(swigCPtr, this, Share.getCPtr(ina), ina, Share.getCPtr(inb), inb);
    return (cPtr == 0) ? null : new Share(cPtr, false);
  }

  public Share putPrintValueGate(Share in, String helpstr) {
    long cPtr = AbyJNI.Circuit_putPrintValueGate(swigCPtr, this, Share.getCPtr(in), in, helpstr);
    return (cPtr == 0) ? null : new Share(cPtr, false);
  }

  public Share putRepeaterGate(long nvals, Share input) {
    long cPtr = AbyJNI.Circuit_putRepeaterGate__SWIG_0(swigCPtr, this, nvals, Share.getCPtr(input), input);
    return (cPtr == 0) ? null : new Share(cPtr, false);
  }

  public long putRepeaterGate(long input, long nvals) {
    return AbyJNI.Circuit_putRepeaterGate__SWIG_1(swigCPtr, this, input, nvals);
  }

  public Share putOUTGate(Share parent, Role dst) {
    long cPtr = AbyJNI.Circuit_putOUTGate(swigCPtr, this, Share.getCPtr(parent), parent, dst.swigValue());
    return (cPtr == 0) ? null : new Share(cPtr, false);
  }

  public Share putSharedOUTGate(Share parent) {
    long cPtr = AbyJNI.Circuit_putSharedOUTGate(swigCPtr, this, Share.getCPtr(parent), parent);
    return (cPtr == 0) ? null : new Share(cPtr, false);
  }

  public long putINVGate(long parentid) {
    return AbyJNI.Circuit_putINVGate(swigCPtr, this, parentid);
  }

  public CircuitType getCircuitType() {
    return CircuitType.swigToEnum(AbyJNI.Circuit_getCircuitType(swigCPtr, this));
  }

  public int getNumCombGates() {
    return AbyJNI.Circuit_getNumCombGates(swigCPtr, this);
  }

  public int getNumStructCombGates() {
    return AbyJNI.Circuit_getNumStructCombGates(swigCPtr, this);
  }

  public int getNumPermGates() {
    return AbyJNI.Circuit_getNumPermGates(swigCPtr, this);
  }

  public int getNumSubsetGates() {
    return AbyJNI.Circuit_getNumSubsetGates(swigCPtr, this);
  }

  public int getNumSplitGates() {
    return AbyJNI.Circuit_getNumSplitGates(swigCPtr, this);
  }

  public Role getRole() {
    return Role.swigToEnum(AbyJNI.Circuit_getRole(swigCPtr, this));
  }

  public void exportCircuitInBristolFormat(Share ingates_client, Share ingates_server, Share outgates, String filename) {
    AbyJNI.Circuit_exportCircuitInBristolFormat(swigCPtr, this, Share.getCPtr(ingates_client), ingates_client, Share.getCPtr(ingates_server), ingates_server, Share.getCPtr(outgates), outgates, filename);
  }

}
