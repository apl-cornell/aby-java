/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package de.tu_darmstadt.cs.encrypto.aby;

public class Share {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected Share(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Share obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        throw new UnsupportedOperationException("C++ destructor does not have public access");
      }
      swigCPtr = 0;
    }
  }

  public SWIGTYPE_p_std__vectorT_unsigned_int_t getWires() {
    return new SWIGTYPE_p_std__vectorT_unsigned_int_t(AbyJNI.Share_getWires(swigCPtr, this), false);
  }

  public long getWireId(long posid) {
    return AbyJNI.Share_getWireId(swigCPtr, this, posid);
  }

  public Share getWireIdsAsShare(long posid) {
    long cPtr = AbyJNI.Share_getWireIdsAsShare(swigCPtr, this, posid);
    return (cPtr == 0) ? null : new Share(cPtr, false);
  }

  public void setWireId(long posid, long wireid) {
    AbyJNI.Share_setWireId(swigCPtr, this, posid, wireid);
  }

  public void setWireIds(SWIGTYPE_p_std__vectorT_unsigned_int_t wires) {
    AbyJNI.Share_setWireIds(swigCPtr, this, SWIGTYPE_p_std__vectorT_unsigned_int_t.getCPtr(wires));
  }

  public long getBitlength() {
    return AbyJNI.Share_getBitlength(swigCPtr, this);
  }

  public void setBitlength(long sharelen) {
    AbyJNI.Share_setBitlength(swigCPtr, this, sharelen);
  }

  public long getMaxBitlength() {
    return AbyJNI.Share_getMaxBitlength(swigCPtr, this);
  }

  public void setMaxBitlength(long max_bitlength) {
    AbyJNI.Share_setMaxBitlength(swigCPtr, this, max_bitlength);
  }

  public long getNvals() {
    return AbyJNI.Share_getNvals(swigCPtr, this);
  }

  public long getNvalsOnWire(long wireid) {
    return AbyJNI.Share_getNvalsOnWire(swigCPtr, this, wireid);
  }

  public CircuitType getCircuitType() {
    return CircuitType.swigToEnum(AbyJNI.Share_getCircuitType(swigCPtr, this));
  }

  public SharingType getShareType() {
    return SharingType.swigToEnum(AbyJNI.Share_getShareType(swigCPtr, this));
  }

  public short getClearValue8() {
    return AbyJNI.Share_getClearValue8(swigCPtr, this);
  }

  public int getClearValue16() {
    return AbyJNI.Share_getClearValue16(swigCPtr, this);
  }

  public long getClearValue32() {
    return AbyJNI.Share_getClearValue32(swigCPtr, this);
  }

  public java.math.BigInteger getClearValue64() {
    return AbyJNI.Share_getClearValue64(swigCPtr, this);
  }

}
